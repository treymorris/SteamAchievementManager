<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:controlzex="urn:controlzex">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/SAM.WPF.Core;component/Styles/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/SAM.WPF.Core;component/Styles/TextStyles.xaml" />

        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.TextBlock.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Themes/Thumb.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <mah:ThicknessBindingConverter x:Key="ThicknessBindingConverter" />
    <mah:ThicknessToDoubleConverter x:Key="ThicknessToDoubleConverter" />

    <!--<Style TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
    </Style>-->

    
    <!--<Style TargetType="{x:Type Window}">
        <Setter Property="FontFamily" Value="{DynamicResource BaseFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
    </Style>-->

    <Style x:Key="CaptionButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="LayoutRoot" Background="Transparent" Width="44" Height="30">
                        <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="Segoe MDL2 Assets" FontSize="10" 
                                   Foreground="#999999" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   RenderOptions.ClearTypeHint="Auto" TextOptions.TextRenderingMode="Aliased"  TextOptions.TextFormattingMode="Display"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="#E5E5E5"/>
                            <Setter TargetName="txt" Property="Foreground" Value="#000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="MinimizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
        <Setter Property="Content" Value="&#xE949;"/>
    </Style>

    <Style x:Key="MaximizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
        <Setter Property="Content" Value="&#xE739;"/>
    </Style>

    <Style x:Key="RestoreButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
        <Setter Property="Content" Value="&#xE923;"/>
    </Style>

    <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
        <Setter Property="Content" Value="&#xE106;"/>
    </Style>

    <ControlTemplate x:Key="ChromeMetroWindowTemplate" TargetType="{x:Type mah:MetroWindow}">
        <Grid Background="{TemplateBinding Background}"
              LayoutTransform="{Binding LayoutTransform, RelativeSource={RelativeSource TemplatedParent}}"
              RenderTransform="{Binding RenderTransform, RelativeSource={RelativeSource TemplatedParent}}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
              UseLayoutRounding="True">
            <AdornerDecorator>
                <Grid UseLayoutRounding="False">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter={x:Static mah:ThicknessSideType.Left}}" />
                        <!--  icon  -->
                        <ColumnDefinition Width="Auto" />
                        <!--  left window commands, title, right window commands  -->
                        <ColumnDefinition Width="*" />
                        <!--  min,max,close buttons  -->
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter={x:Static mah:ThicknessSideType.Right}}" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter={x:Static mah:ThicknessSideType.Top}}" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Rectangle x:Name="PART_WindowTitleBackground"
                               Grid.Row="1"
                               Grid.Column="1"
                               Grid.ColumnSpan="3"
                               Fill="{TemplateBinding WindowTitleBrush}"
                               Focusable="False"
                               StrokeThickness="0" />

                    <!--  icon  -->
                    <ContentControl x:Name="PART_Icon"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    MinWidth="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Panel.ZIndex="1"
                                    Content="{TemplateBinding Icon}"
                                    ContentTemplate="{TemplateBinding IconTemplate}"
                                    Focusable="False"
                                    Visibility="{TemplateBinding ShowIconOnTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <mah:MetroThumb x:Name="PART_WindowTitleThumb"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="5"
                                    Style="{StaticResource MahApps.Styles.Thumb.WindowTitle}"
                                    UseLayoutRounding="True" />

                    <DockPanel Grid.Row="1"
                               Grid.Column="2"
                               VerticalAlignment="Top"
                               Focusable="False">
                        <!--  the left window commands  -->
                        <mah:ContentPresenterEx x:Name="PART_LeftWindowCommands"
                                                Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                VerticalAlignment="Top"
                                                controlzex:WindowChrome.IsHitTestVisibleInChrome="True"
                                                Content="{Binding LeftWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                DockPanel.Dock="Left"
                                                Focusable="False" />
                        <!--  the right window commands  -->
                        <mah:ContentPresenterEx x:Name="PART_RightWindowCommands"
                                                Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                VerticalAlignment="Top"
                                                controlzex:WindowChrome.IsHitTestVisibleInChrome="True"
                                                Content="{Binding RightWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                DockPanel.Dock="Right"
                                                Focusable="False" />
                        <!--  the title bar  -->
                        <mah:MetroThumbContentControl x:Name="PART_TitleBar"
                                                      Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                      HorizontalAlignment="{TemplateBinding TitleAlignment}"
                                                      HorizontalContentAlignment="Stretch"
                                                      VerticalContentAlignment="Stretch"
                                                      Content="{TemplateBinding Title}"
                                                      ContentCharacterCasing="{TemplateBinding TitleCharacterCasing}"
                                                      ContentTemplate="{TemplateBinding TitleTemplate}"
                                                      Focusable="False"
                                                      Foreground="{TemplateBinding TitleForeground}" />
                    </DockPanel>

                    <!--  the window button commands  -->
                    <mah:ContentPresenterEx x:Name="PART_WindowButtonCommands"
                                            Grid.Row="1"
                                            Grid.RowSpan="2"
                                            Grid.Column="3"
                                            Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                            VerticalAlignment="Top"
                                            Panel.ZIndex="1"
                                            controlzex:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Content="{Binding WindowButtonCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                            Focusable="False" />

                    <!--  the main window content  -->
                    <mah:MetroContentControl x:Name="PART_Content"
                                             Grid.Row="2"
                                             Grid.Column="0"
                                             Grid.ColumnSpan="5"
                                             FocusVisualStyle="{x:Null}"
                                             IsTabStop="False"
                                             OnlyLoadTransition="True"
                                             TransitionsEnabled="{TemplateBinding WindowTransitionsEnabled}"
                                             UseLayoutRounding="True">
                        <mah:ContentPresenterEx x:Name="PART_ContentPresenter"
                                                Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessBindingConverter}, ConverterParameter={x:Static mah:ThicknessSideType.Top}}"
                                                controlzex:WindowChrome.IsHitTestVisibleInChrome="True"
                                                UseLayoutRounding="False" />
                    </mah:MetroContentControl>

                    <!--  disables the main content when a modal flyout is shown  -->
                    <Rectangle x:Name="PART_FlyoutModal"
                               Grid.Row="1"
                               Grid.RowSpan="2"
                               Grid.Column="1"
                               Grid.ColumnSpan="3"
                               Fill="{TemplateBinding FlyoutOverlayBrush}"
                               Visibility="Hidden" />
                    <mah:MetroThumb x:Name="PART_FlyoutModalDragMoveThumb"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="5"
                                    Style="{StaticResource MahApps.Styles.Thumb.WindowTitle}"
                                    Visibility="{Binding ElementName=PART_FlyoutModal, Path=Visibility, Mode=OneWay}" />

                    <!--  flyouts  -->
                    <ContentControl Grid.Row="1"
                                    Grid.RowSpan="2"
                                    Grid.Column="1"
                                    Grid.ColumnSpan="3"
                                    VerticalAlignment="Stretch"
                                    Panel.ZIndex="2"
                                    Content="{Binding Flyouts, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    Focusable="False"
                                    KeyboardNavigation.TabNavigation="None" />

                    <!--  inactive dialog container  -->
                    <Grid x:Name="PART_MetroInactiveDialogsContainer"
                          Grid.Row="1"
                          Grid.RowSpan="2"
                          Grid.Column="1"
                          Grid.ColumnSpan="3"
                          Panel.ZIndex="3"
                          FocusVisualStyle="{x:Null}" />

                    <!--  overlay effect container  -->
                    <Grid x:Name="PART_OverlayBox"
                          Grid.Row="1"
                          Grid.RowSpan="2"
                          Grid.Column="1"
                          Grid.ColumnSpan="3"
                          Panel.ZIndex="4"
                          Background="{TemplateBinding OverlayBrush}"
                          FocusVisualStyle="{x:Null}"
                          Focusable="False"
                          Opacity="0"
                          Visibility="Hidden" />

                    <!--  active dialog container  -->
                    <Grid x:Name="PART_MetroActiveDialogContainer"
                          Grid.Row="1"
                          Grid.RowSpan="2"
                          Grid.Column="1"
                          Grid.ColumnSpan="3"
                          Panel.ZIndex="5"
                          FocusVisualStyle="{x:Null}" />
                </Grid>
            </AdornerDecorator>

            <Border x:Name="PART_Border"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Background="{x:Null}"
                    BorderBrush="{TemplateBinding GlowBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    UseLayoutRounding="True" />
            <ResizeGrip x:Name="WindowResizeGrip"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        IsTabStop="False"
                        UseLayoutRounding="True"
                        Visibility="Collapsed" />
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="ShowDialogsOverTitleBar" Value="False">
                <Setter TargetName="PART_MetroActiveDialogContainer" Property="Grid.Row" Value="2" />
                <Setter TargetName="PART_MetroActiveDialogContainer" Property="Grid.RowSpan" Value="1" />
                <Setter TargetName="PART_MetroInactiveDialogsContainer" Property="Grid.Row" Value="2" />
                <Setter TargetName="PART_MetroInactiveDialogsContainer" Property="Grid.RowSpan" Value="1" />
                <Setter TargetName="PART_OverlayBox" Property="Grid.Row" Value="2" />
                <Setter TargetName="PART_OverlayBox" Property="Grid.RowSpan" Value="1" />
            </Trigger>

            <Trigger Property="UseNoneWindowStyle" Value="True">
                <Setter TargetName="PART_FlyoutModalDragMoveThumb" Property="Grid.RowSpan" Value="2" />
                <Setter TargetName="PART_WindowTitleThumb" Property="Grid.RowSpan" Value="2" />
            </Trigger>
            <Trigger Property="ShowTitleBar" Value="False">
                <Setter TargetName="PART_FlyoutModalDragMoveThumb" Property="Grid.RowSpan" Value="2" />
                <Setter TargetName="PART_WindowTitleThumb" Property="Grid.RowSpan" Value="2" />
            </Trigger>
            <!--  handle active/inactive state  -->
            <Trigger Property="IsActive" Value="False">
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveGlowBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <!--<Setter TargetName="PART_WindowTitleBackground" Property="Fill" Value="{Binding Path=NonActiveWindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />-->
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsActive" Value="False" />
                    <Condition Property="GlowBrush" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveBorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsActive" Value="True" />
                    <Condition Property="GlowBrush" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=BorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </MultiTrigger>
            <!--  HitTest visibility  -->
            <Trigger Property="GlowBrush" Value="{x:Null}">
                <Setter TargetName="PART_Border" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
                <Setter TargetName="PART_ContentPresenter" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
                <Setter TargetName="PART_LeftWindowCommands" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
                <Setter TargetName="PART_RightWindowCommands" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
                <Setter TargetName="PART_WindowButtonCommands" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
            </Trigger>
            <Trigger Property="ResizeMode" Value="NoResize">
                <Setter TargetName="PART_Border" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter TargetName="PART_ContentPresenter" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter TargetName="PART_LeftWindowCommands" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter TargetName="PART_RightWindowCommands" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter TargetName="PART_TitleBar" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter TargetName="PART_WindowButtonCommands" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            </Trigger>
            <!--  no icon and no icon content template -> collapse the icon content control  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Icon" Value="{x:Null}" />
                    <Condition Property="IconTemplate" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Icon" Property="MinWidth" Value="0" />
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                    <Condition Property="WindowState" Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>


    <Style x:Key="ChromeMetroWindowStyle" TargetType="{x:Type mah:MetroWindow}">
        <Setter Property="FontFamily" Value="{DynamicResource BaseFontFamily}" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="UseNoneWindowStyle" Value="False" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="ShowTitleBar" Value="True" />
        <Setter Property="ShowSystemMenu" Value="True" />
        <Setter Property="ShowSystemMenuOnRightClick" Value="True" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="TitleAlignment" Value="Center" />
        <Setter Property="TitleCharacterCasing" Value="Normal" />
        <Setter Property="GlowBrush" Value="#66FFFFFF" />
        <Setter Property="NonActiveGlowBrush" Value="#3BFFFFFF" />
        <Setter Property="Template" Value="{StaticResource ChromeMetroWindowTemplate}" />
    </Style>

    <Style TargetType="{x:Type mah:MetroWindow}">
        <Setter Property="FontFamily" Value="{DynamicResource BaseFontFamily}" />
    </Style>

</ResourceDictionary>